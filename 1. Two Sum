// optimalSolution
import java.util.HashMap;
class Solution {
    public int[] twoSum(int[] nums, int target) {
        HashMap<Integer, Integer> map = new HashMap<Integer, Integer>();
        for(int i=0; i<nums.length; i++){
            int comp=target-nums[i];
            if(map.containsKey(comp)){
                return new int[]{map.get(comp),i};
            }
            map.put(nums[i],i); // (element, index)
        }
        return new int[]{};
    }
}

// bruteForce
// import java.util.*;
// class Solution {
//     public int[] twoSum(int[] nums, int target) {

//         int[] b= new int[2];

//         int flag = 0;

//         for(int i=0; i<nums.length; i++){
//             for(int j=i+1; j<nums.length; j++){
//                 if(target == nums[i]+nums[j]){
//                     b[0]=i;
//                     b[1]=j;  
//                 }
//             }
//         }
//         return b;
//     }
// }
